DROP TABLE IF EXISTS requests, compilation_events, compilations, events, locations, categories, users;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email VARCHAR(255)                            NOT NULL UNIQUE,
    name  VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) UNIQUE,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT4,
    lon FLOAT4,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 INT GENERATED ALWAYS AS IDENTITY,
    initiator          INT           NOT NULL,
    annotation         VARCHAR(1000) NOT NULL,
    category           INT           NOT NULL,
    description        VARCHAR(1000) NOT NULL,
    event_date         TIMESTAMP     NOT NULL,
    location           INT           NOT NULL,
    paid               BOOLEAN       NOT NULL,
    participant_limit  INT,
    request_moderation BOOLEAN       NOT NULL,
    title              VARCHAR(100)  NOT NULL,
    create_on          TIMESTAMP     NOT NULL,
    published_on       TIMESTAMP,
    state              VARCHAR(10)   NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT fk_initiator FOREIGN KEY (initiator) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_category FOREIGN KEY (category) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT fk_location FOREIGN KEY (location) REFERENCES locations (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created   TIMESTAMP,
    event     BIGINT references events (id),
    requester BIGINT references users (id),
    status    VARCHAR(255),
    CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title  VARCHAR(255),
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT REFERENCES compilations (id),
    event_id       BIGINT REFERENCES events (id),
    CONSTRAINT ce_pk PRIMARY KEY (compilation_id, event_id)
);

